float var = 1.2f // we should put f after number because 1.2 is by default a double
instance method : بناديها بإسم المتغير



      while (true)
            {
                Console.WriteLine("Enter First Number :");
                user_input = Console.ReadLine();

                check_input = float.TryParse(user_input, out first_num);
                if (check_input == true)
                {
                    break; //break the loop
                }
                else
                {
                    Console.WriteLine("Enter Valid Number !!!");
                }
            }

            while (true)
            {
                Console.WriteLine("Enter Second Number :");
                user_input = Console.ReadLine();

                check_input = float.TryParse(user_input, out second_num);
                if (check_input == true)
                {
                    break; //break the loop
                }
                else
                {
                    Console.WriteLine("Enter Valid Number !!!");
                }
            }



///////////////////////////////////////////////////////////////////////////////////////////////
Task  1.1:  

          /*         Get two integer from user and get max of them       */

            int num1, num2, Max;

             //taking first number from user 
            Console.WriteLine("Enter First Number : ");
            num1 = int.Parse(Console.ReadLine());

            //taking second number from user 
            Console.WriteLine("Enter Second Number : ");
            num2 = int.Parse(Console.ReadLine());

            if(num1 >= num2)
            {
                Max = num1;
            }
            else
            {
                Max = num2;
            }
            Console.WriteLine("Max number is : {0}", Max);




///////////////////////////////////////////////////////////////////////////////////////////////
Task 2.1 :


            /* Create simple menu and get user selection from it 
             * to calculate sum or get max or get min 
             */

            int num1, num2, Max, Min, user_choice;

            //taking first number from user 
            Console.WriteLine("Enter First Number : ");
            num1 = int.Parse(Console.ReadLine());

            //taking second number from user 
            Console.WriteLine("Enter Second Number : ");
            num2 = int.Parse(Console.ReadLine());

            Console.WriteLine("Choose an action from menu : ");
            Console.WriteLine("1-Sum");
            Console.WriteLine("2-Max");
            Console.WriteLine("3-Min");

            user_choice= int.Parse(Console.ReadLine());

            switch (user_choice) {
                case 1:
                    Console.WriteLine("Sum : {0}", num1 + num2);
                    break;

                case 2:
                    if (num1 >= num2)
                    {
                        Max = num1;
                    }
                    else
                    {
                        Max = num2;
                    }
                    Console.WriteLine("Max : {0}", Max);
                    break;

                case 3:
                    if (num1 <= num2)
                    {
                        Min = num1;
                    }
                    else
                    {
                        Min = num2;
                    }
                    Console.WriteLine("Min : {0}", Min);
                    break;
            }

///////////////////////////////////////////////////////////////////////////////////////////////
Task 2.2 :

 /*                  Simple Calculator                    */


            int operand1, operand2;
            string user_input;
            char Operator;
            float result;


            //taking first operand
            Console.Write("Enter first operand : ");
            operand1 = int.Parse(Console.ReadLine());

            //taking operation from user
            Console.Write("Enter operation : ");
            user_input = Console.ReadLine();
            Operator = user_input[0];

            //taking second operand
            Console.Write("Enter second operand : ");
            operand2 = int.Parse(Console.ReadLine());


            switch (Operator) {

                case '+':
                    result = operand1 + operand2;
                    Console.WriteLine("{0} + {1} = {2}", operand1, operand2, result);
                    break;


                case '-' :
                    result = operand1 - operand2;
                    Console.WriteLine("{0} - {1} = {2}",operand1,operand2,result);
                    break;


                case '*':
                    result = operand1 * operand2;
                    Console.WriteLine("{0} * {1} = {2}", operand1, operand2, result);
                    break;


                case '/':
                    result = (float)operand1 / operand2;
                    Console.WriteLine("{0} / {1} = {2}", operand1, operand2, result);
                    break;
                    }

///////////////////////////////////////////////////////////////////////////////////////////////
Task 2.3 :

 /*                    Magic Box                  */

            bool Check_Odd = false;
            int row,column;
            int Box_Size = 3;  //initial value

            //check if Box Size is ODD or not
            while (Check_Odd == false)
            {
                Console.Write("Enter Box Size : ");
                Box_Size = int.Parse(Console.ReadLine());
                if (Box_Size % 2 == 0)
                {
                    Check_Odd = false;
                    Console.WriteLine("Box Size must be ODD number !!!");
                }
                else
                {
                    Check_Odd = true;
                }
            }

            row = 1;
            column = Box_Size/2 +1 ;
            
            //calculate shift amount for rows and columns
            int row_shift    = Console.WindowHeight  / (Box_Size + 1);
            int column_shift = Console.WindowWidth / (Box_Size + 1);

            for (int i = 1; i <= Box_Size*Box_Size; i++)
            {
                Console.SetCursorPosition(column * column_shift, row * row_shift);
                Console.WriteLine(i);
                if (i % Box_Size == 0)
                {
                    row++;
                }
                else
                {
                    row--;
                    column--;
                }

                if (row < 1)
                {
                    row = Box_Size;
                }

                if (column < 1)
                {
                    column = Box_Size;
                }
            }

///////////////////////////////////////////////////////////////////////////////////////////////
Task 2.4 :

/*    Get sum,average,max,min.  and let user enter amount of numbers   */

int sum = 0;
            int max, min;
            float average;
            int numbers_count = 0;
            Console.Write("Enter amount of numbers : ");
            numbers_count = int.Parse(Console.ReadLine());

            int[] numbers = new int[numbers_count];

            //filling the array
            for (int i = 0; i < numbers_count; i++)
            {
                numbers[i] = int.Parse(Console.ReadLine());
                sum += numbers[i];
            }

            average = (float)sum / numbers_count;

            max = numbers[0];
            min = numbers[0];


            for (int i = 0; i < numbers_count; i++) {
                if (numbers[i] > max)
                {
                    max = numbers[i];
                }

                if (numbers[i] < min)
                {
                    min = numbers[i];
                }
            
            }
            Console.WriteLine("Sum is {0} , Average is {1}", sum, average);

            Console.WriteLine("Max is {0} , Min is {1}", max, min);



///////////////////////////////////////////////////////////////////////////////////////////////
Task 2.5 :

/*                        Calculate the result of one operation equation                      */

            Console.Write("Enter Equation : ");
            string user_input = Console.ReadLine();
            string[] operands = null ;
            float result = 0; ;
            if (user_input.Contains('+'))
            {
                operands = user_input.Split('+');
                result = int.Parse(operands[0]) + int.Parse(operands[1]);
                
            }

            else if (user_input.Contains('-'))
            {
                operands = user_input.Split('-');
                result = int.Parse(operands[0]) - int.Parse(operands[1]);
            }

            else if (user_input.Contains('*'))
            {
                operands = user_input.Split('*');
                result = int.Parse(operands[0]) * int.Parse(operands[1]);
            }

            else if (user_input.Contains('/'))
            {
                operands = user_input.Split('/');
                result = (float)int.Parse(operands[0]) / int.Parse(operands[1]);
            }

            Console.WriteLine("Result = {0}", result);


///////////////////////////////////////////////////////////////////////////////////////////////
Task 2.6 :

            /*             Get  degree of 3 students for 4 subjects            */ 

            int[,] arr = new int[3,4];
            float average = 0;
            int[] marks_sum = new int[3]; 
            //taking input from user
            for(int i = 0; i<3; i++)
            {
                Console.WriteLine("Enter Degree of Student {0} :",i+1);
                for(int j = 0; j<4; j++)
                {
                    arr[i,j] = int.Parse(Console.ReadLine());
                    marks_sum[i] += arr[i, j];
                }
            }

           
            Console.WriteLine("");
            for (int i = 0; i < 3; i++) {
                Console.WriteLine("Total marks for student {0} is {1}", i+1, marks_sum[i]);
            }

            Console.WriteLine("");
            for (int j = 0; j < 4; j++)
            {
                Console.Write("The average of subject {0} is " ,j + 1);
                for (int i = 0; i < 3; i++) { 
                    average+= arr[i,j];
                }
                average /= 3;
                Console.WriteLine(average);
                average = 0;
            }

///////////////////////////////////////////////////////////////////////////////////////////////
Task 2.7 :

            /*              Jagged Array              */

            int number_of_classrooms = 0;
            int number_of_student = 0;
            float average = 0;
            Console.Write("Enter number of classrooms : ");
            number_of_classrooms = int.Parse(Console.ReadLine());


            int[][] jagged_arr = new int[number_of_classrooms][];

            Console.WriteLine("jagged array length is {0}", jagged_arr.Length);
            for (int i = 0; i < number_of_classrooms; i++)
            {

                Console.Write("Enter number of student in class : ");
                number_of_student = int.Parse(Console.ReadLine());
                jagged_arr[i] = new int[number_of_student];  //set size for the array
                Console.WriteLine("Enter degree of student");
                
                for (int j = 0; j < number_of_student; j++)
                {

                    jagged_arr[i][j] = int.Parse(Console.ReadLine());


                }

            }



            for (int i = 0; i < jagged_arr.Length; i++)
            {

               
                Console.WriteLine("degree of students :");

                for (int j = 0; j < jagged_arr[i].Length; j++)
                {

                    Console.Write("{0}  ",jagged_arr[i][j]);


                }
                Console.WriteLine("");
            }



            for (int i = 0; i < jagged_arr.Length; i++)
            {



                for (int j = 0; j < jagged_arr[i].Length; j++)
                {
                    average += jagged_arr[i][j];
                }
                Console.WriteLine("");
                average /= jagged_arr[i].Length;
                Console.WriteLine("Average of class {0} is : {1}", i + 1, average);
                average = 0; //clearing the average value
            }




///////////////////////////////////////////////////////////////////////////////////////////////
Task 3.1 :

/*                      Menu                        */




            string[] display_text = { "New", "Display", "Exit" };
            int col_shift = Console.WindowWidth / 2;
            int row_shift = Console.WindowHeight / (display_text.Length + 1);
            int highlight = 0;
            bool looping = true;
            bool Go_back = true;
            string[] user_data = new string[3];

            do
            {
                Console.ResetColor();
                Console.Clear();
                for (int i = 0; i < display_text.Length; i++)
                {
                    if (i == highlight)
                    {
                        Console.BackgroundColor = ConsoleColor.Blue;
                    }
                    else
                    {
                        Console.BackgroundColor = ConsoleColor.Black;
                    }
                    Console.SetCursorPosition(col_shift, row_shift * (i + 1));
                    Console.WriteLine(display_text[i]);
                }

                ConsoleKeyInfo key_pressed = Console.ReadKey();

                switch (key_pressed.Key)
                {
                    case ConsoleKey.DownArrow:
                        highlight++;
                        if (highlight > display_text.Length - 1)
                        {
                            highlight = 0;
                        }
                        break;
                    case ConsoleKey.UpArrow:
                        highlight--;
                        if (highlight < 0)
                        {
                            highlight = display_text.Length - 1;
                        }
                        {

                        }

                        break;

                    case ConsoleKey.Home:
                        highlight = 0;
                        break;


                    case ConsoleKey.End:
                        highlight = 2;
                        break;

                    case ConsoleKey.Escape:
                        looping = false;
                        

                        break;

                    case ConsoleKey.Enter:
                        Console.Clear();
                        switch (highlight)
                        {
                            case 0: //new buttton
                                Console.WriteLine("New");
                                New_button_routine(user_data);
                                break;
                            case 1:
                                Console.WriteLine("Display");
                                Display_button_routine(user_data);
                                while (Go_back)
                                {
                                    key_pressed = Console.ReadKey();
                                    if (key_pressed.Key == ConsoleKey.Escape)
                                    {
                                        Go_back = false;
                                    }
                                }
                                Go_back = true;
                                break;

                            case 2:
                                looping = false;
                                break;
                        }

                        break;
                }


            }
            while (looping);
            Console.BackgroundColor = ConsoleColor.Black;
            Console.Clear();
           

           

    //Functions :

        public static void New_button_routine(string[] data)
        {
            Console.Write("Enter Your Name :");
            data[0] = Console.ReadLine();
            Console.Write("Enter Your ID :");
            data[1] = Console.ReadLine();
            Console.Write("Enter Your Salary :");
            data[2] = Console.ReadLine();




        }
        public static void Display_button_routine(string []data)
        {
            Console.Write("User Name :");
            Console.WriteLine(data[0]);
            Console.Write("User ID :");
            Console.WriteLine(data[1]);
            Console.Write("User Salary :");
            Console.WriteLine(data[2]);
        }
    }
}




///////////////////////////////////////////////////////////////////////////////////////////////
Task 3.2 :

    /*                      Factorial (Recursive)                     */

            int number;
            Console.Write("Enter Number : ");
            number = int.Parse(Console.ReadLine());
            Console.WriteLine("Factorial = {0}", Factorial(number));


        public static long Factorial(int n)
        {
            if (n <= 1)
                return 1;
            else
                return n * Factorial(n - 1);
        }



///////////////////////////////////////////////////////////////////////////////////////////////
Task 4.1 :

 //--Structs--
struct complex
    {
        public int real;
        public int img;
        public void display()
        {
            Console.Write(real);
            if (img > 0)
            {
                Console.Write('+');
                Console.WriteLine($"{img}i");
            }
            else if (img < 0)
            {
                Console.WriteLine($"{img}i");
            }
        }
    }

    //--Functions--
    public static void add_complex ( complex c1, complex c2,ref complex result){  //we add ref to change in the struct itself
            result.real = c1.real + c2.real;    
            result.img = c1.img + c2.img;   
            }

        public static void subtract_complex(complex c1, complex c2, ref complex result)
        {  //we add ref to change in the struct itself
            result.real = c1.real - c2.real;
            result.img = c1.img - c2.img;

        }

     //--Algorithm--

            complex c1     = new complex();
            complex c2     = new complex();
            complex result = new complex();

            
            //get first number
            Console.WriteLine("enter first number real value : ");
            c1.real = int.Parse(Console.ReadLine()); 
            Console.WriteLine("enter first number imaginary value : ");
            c1.img = int.Parse(Console.ReadLine());

            //get second number
            Console.WriteLine("enter second number real value : ");
            c2.real = int.Parse(Console.ReadLine());
            Console.WriteLine("enter second number imaginary value : ");
            c2.img = int.Parse(Console.ReadLine());

            //display two numbers
            Console.Write("First number  : ");
            c1.display();
            Console.Write("Second number : ");
            c2.display();

            //display result
            Console.WriteLine();
            Console.Write("Result : ");
            add_complex(c1, c2, ref result);
            result.display();

///////////////////////////////////////////////////////////////////////////////////////////////
Task 4.2 :


//--Structs--
 public struct Employee
    {
        public int ID;
        public string name;
        public int salary;
        public Gender g;
    }

//--Enums--
  public enum Gender
    {
    male,
    female
    }

//--Functions--
  public static void New_button_routine(Employee [] data)
        {


            for (int i = 0; i < data.Length; i++)
            {
                Console.WriteLine($"Enter Data of Emplyee number {i+1}");
                Console.Write("Enter Name :");
                data[i].name = Console.ReadLine();
                Console.Write("Enter Your ID :");
                data[i].ID = int.Parse(Console.ReadLine());
                Console.Write("Enter Your Salary :");
                data[i].salary = int.Parse(Console.ReadLine());

                Console.Write("Enter your gender : ");
                string user_input = Console.ReadLine();
                user_input.ToLower();
                if(user_input == "male")
                {
                    data[i].g = Gender.male;
                }
                else if(user_input == "female")
                {
                    data[i].g = Gender.female;
                }

            }


        }
        public static void Display_button_routine(Employee[] data)
        {
            for (int i = 0; i < data.Length; i++)
            {
                Console.Write($"Employee number {i+1} Name :");
                Console.WriteLine(data[i].name);
                Console.Write("ID :");
                Console.WriteLine(data[i].ID);
                Console.Write("Salary :");
                Console.WriteLine(data[i].salary);
                Console.Write("Gender : ");
                Console.WriteLine(data[i].g);
            }
        }

//--Algorithm--

 string[] display_text = { "New", "Display", "Exit" };
            int col_shift = Console.WindowWidth / 2;
            int row_shift = Console.WindowHeight / (display_text.Length + 1);
            int highlight = 0;
            bool looping = true;
            bool Go_back = true;
            Employee []arr = new Employee[3];  //array of structs

            do
            {
                Console.ResetColor();
                Console.Clear();
                for (int i = 0; i < display_text.Length; i++)
                {
                    if (i == highlight)
                    {
                        Console.BackgroundColor = ConsoleColor.Blue;
                    }
                    else
                    {
                        Console.BackgroundColor = ConsoleColor.Black;
                    }
                    Console.SetCursorPosition(col_shift, row_shift * (i + 1));
                    Console.WriteLine(display_text[i]);
                }

                ConsoleKeyInfo key_pressed = Console.ReadKey();

                switch (key_pressed.Key)
                {
                    case ConsoleKey.DownArrow:
                        highlight++;
                        if (highlight > display_text.Length - 1)
                        {
                            highlight = 0;
                        }
                        break;
                    case ConsoleKey.UpArrow:
                        highlight--;
                        if (highlight < 0)
                        {
                            highlight = display_text.Length - 1;
                        }
                        {

                        }

                        break;

                    case ConsoleKey.Home:
                        highlight = 0;
                        break;


                    case ConsoleKey.End:
                        highlight = 2;
                        break;

                    case ConsoleKey.Escape:
                        looping = false;


                        break;

                    case ConsoleKey.Enter:
                        Console.Clear();
                        switch (highlight)
                        {
                            case 0: //new buttton
                                Console.WriteLine("New");
                                New_button_routine(arr);
                                break;
                            case 1:
                                Console.WriteLine("Display");
                                Display_button_routine(arr);
                                while (Go_back)
                                {
                                    key_pressed = Console.ReadKey();
                                    if (key_pressed.Key == ConsoleKey.Escape)
                                    {
                                        Go_back = false;
                                    }
                                }
                                Go_back = true;
                                break;

                            case 2:
                                looping = false;
                                break;
                        }

                        break;
                }


            }
            while (looping);
            Console.BackgroundColor = ConsoleColor.Black;
            Console.Clear();






///////////////////////////////////////////////////////////////////////////////////////////////
Task 4.3 :

/*                           Stack                              */

//--Classes--

            public class Stack
    {
        private  static int _size = 0;

        public int size
        {
            set
            {
                _size = value;  
            }
        }

        static int [] data = new int /*[_size]*/  [100]; //problem _size can not access value from outside

        static int SP = -1;


        public Stack(int num)
        {
            _size = num;
        }
        public  void Push(int num)
        {
            if(SP == _size - 1)
            {
                Console.WriteLine("Stack is Full");
            }
            else
            {
                data[++SP] = num;
            }
        }


        public  int Pop()
        {
            if(SP == -1)
            {
                Console.WriteLine("Stack is Empty");
                return 0;
            }
            else
            {
                return data[SP--];
            }


        }

    }

 //--Algorithm--

 Stack ahmed = new Stack(100);
            ahmed.size = 100;

            ahmed.Push(12);
            ahmed.Push(13);
            ahmed.Push(14);
            Console.WriteLine(ahmed.Pop());
            Console.WriteLine(ahmed.Pop());
            Console.WriteLine(ahmed.Pop());
            Console.WriteLine(ahmed.Pop());

///////////////////////////////////////////////////////////////////////////////////////////////
Task 4.4 :
/*                              Menu (with classes)                             */
//--Classes--

public class Employee_data
    {
        public string name;
        public  int ID;
        public  int Salary;

        public enum Gender
        {
            male,
            female
        }

        public Gender g;

        private static int _age;

        public int age
        {
            get
            {
                return _age;
            }

            set
            {
                _age = value;
            }
        }
        public Employee_data(int id, string Name, int salary, Employee_data.Gender gen,int Age)
        {
            ID = id;
            name = Name;
            Salary = salary;
            g = gen;
            _age = Age;
        }
        public void Display_data()
        {

            Console.WriteLine("Employee Name : {0}", name);
            Console.WriteLine("ID : {0}", ID);
            Console.WriteLine("Salary : {0}", Salary);

            if (g == Gender.male)
            {
                Console.WriteLine("Gender : male");
            }
            else
            {
                Console.WriteLine("Gender : female");
            }
            Console.WriteLine("Age : {0}", _age);
        }
    }



//--Algorithm--


